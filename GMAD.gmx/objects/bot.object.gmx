<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>0</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Create a car and other AI properties

obj = instance_create( x, y, car );
obj.input = id;

obj.image_blend = make_color_hsv( random( 255 ), 255, 127 );

indexTo = 0; //the index of the AIPoint they're heading towards
aiPoints = false; //list of AIPoints

aiOffX = random(60) - 30;
aiOffY = random(60) - 30;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy car

with ( obj ) instance_destroy( );
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///AI

obj.inForward = true;//keyboard_check( ord( 'W' ) );
//obj.inLeft = keyboard_check( ord( 'A' ) );
//obj.inRight = keyboard_check( ord( 'D' ) );

//indexTo = 0; //the index of the AIPoint they're heading towards
//aiPoints = false; //list of AIPoints

var l = array_length_1d(aiPoints);

var aip = aiPoints[indexTo];
/*
x
y
phy_speed_x
phy_rotation
*/

var dirToAIP = point_direction(obj.x, obj.y, aip.x + aiOffX, aip.y + aiOffY);
var diff = angle_difference(dirToAIP, 90-obj.phy_rotation);

if (diff &gt; 0){
    obj.inLeft = true;
    obj.inRight = false;
} else {
    obj.inLeft = false;
    obj.inRight = true;
}

if (point_distance(obj.x, obj.y, aip.x, aip.y) &lt; 64){
    //move to next AIPoint
    indexTo++;
    if (indexTo &gt;= l){
        indexTo = 0;
    }
    aiOffX = random_range( -48, 48 );
    aiOffY = random_range( -48, 48 );
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Organize AIPoints

var tQueue = ds_priority_create( );

with ( AIPoint ) {
    ds_priority_add( tQueue, id, index );
}

var ind = 0;
while ( !ds_priority_empty( tQueue ) ) {
    aiPoints[ind++] = ds_priority_find_min( tQueue );
    ds_priority_delete_min( tQueue );
}

ds_priority_destroy( tQueue );
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
